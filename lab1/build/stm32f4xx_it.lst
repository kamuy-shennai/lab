ARM GAS  /tmp/cchyYCbu.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32f4xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB133:
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stdio.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f4xx_it.c **** 
  28:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/cchyYCbu.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f4xx_it.c **** 
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f4xx_it.c **** 
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f4xx_it.c **** 
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f4xx_it.c **** 
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  60:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  61:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  62:Core/Src/stm32f4xx_it.c **** extern int i_flash;
  63:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  64:Core/Src/stm32f4xx_it.c **** 
  65:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  67:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32f4xx_it.c **** /**
  69:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Core/Src/stm32f4xx_it.c ****   */
  71:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  72:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 72 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  73:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32f4xx_it.c **** 
  75:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Core/Src/stm32f4xx_it.c ****   while (1)
  36              		.loc 1 77 3 discriminator 1 view .LVU1
  78:Core/Src/stm32f4xx_it.c ****   {
  79:Core/Src/stm32f4xx_it.c ****   }
ARM GAS  /tmp/cchyYCbu.s 			page 3


  37              		.loc 1 79 3 discriminator 1 view .LVU2
  77:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 77 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE133:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB134:
  80:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32f4xx_it.c **** }
  82:Core/Src/stm32f4xx_it.c **** 
  83:Core/Src/stm32f4xx_it.c **** /**
  84:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Core/Src/stm32f4xx_it.c ****   */
  86:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  87:Core/Src/stm32f4xx_it.c **** {
  52              		.loc 1 87 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  88:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Core/Src/stm32f4xx_it.c **** 
  90:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Core/Src/stm32f4xx_it.c ****   while (1)
  59              		.loc 1 91 3 discriminator 1 view .LVU5
  92:Core/Src/stm32f4xx_it.c ****   {
  93:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Core/Src/stm32f4xx_it.c ****   }
  60              		.loc 1 95 3 discriminator 1 view .LVU6
  91:Core/Src/stm32f4xx_it.c ****   {
  61              		.loc 1 91 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE134:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB135:
  96:Core/Src/stm32f4xx_it.c **** }
  97:Core/Src/stm32f4xx_it.c **** 
  98:Core/Src/stm32f4xx_it.c **** /**
  99:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 100:Core/Src/stm32f4xx_it.c ****   */
ARM GAS  /tmp/cchyYCbu.s 			page 4


 101:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 102:Core/Src/stm32f4xx_it.c **** {
  75              		.loc 1 102 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 103:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Core/Src/stm32f4xx_it.c **** 
 105:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f4xx_it.c ****   while (1)
  82              		.loc 1 106 3 discriminator 1 view .LVU9
 107:Core/Src/stm32f4xx_it.c ****   {
 108:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f4xx_it.c ****   }
  83              		.loc 1 110 3 discriminator 1 view .LVU10
 106:Core/Src/stm32f4xx_it.c ****   {
  84              		.loc 1 106 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE135:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB136:
 111:Core/Src/stm32f4xx_it.c **** }
 112:Core/Src/stm32f4xx_it.c **** 
 113:Core/Src/stm32f4xx_it.c **** /**
 114:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 115:Core/Src/stm32f4xx_it.c ****   */
 116:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 117:Core/Src/stm32f4xx_it.c **** {
  98              		.loc 1 117 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 118:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Core/Src/stm32f4xx_it.c **** 
 120:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Core/Src/stm32f4xx_it.c ****   while (1)
 105              		.loc 1 121 3 discriminator 1 view .LVU13
 122:Core/Src/stm32f4xx_it.c ****   {
 123:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Core/Src/stm32f4xx_it.c ****   }
 106              		.loc 1 125 3 discriminator 1 view .LVU14
 121:Core/Src/stm32f4xx_it.c ****   {
ARM GAS  /tmp/cchyYCbu.s 			page 5


 107              		.loc 1 121 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE136:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB137:
 126:Core/Src/stm32f4xx_it.c **** }
 127:Core/Src/stm32f4xx_it.c **** 
 128:Core/Src/stm32f4xx_it.c **** /**
 129:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Core/Src/stm32f4xx_it.c ****   */
 131:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 132:Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 132 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 133:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Core/Src/stm32f4xx_it.c **** 
 135:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 136 3 discriminator 1 view .LVU17
 137:Core/Src/stm32f4xx_it.c ****   {
 138:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 140 3 discriminator 1 view .LVU18
 136:Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 136 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE137:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB138:
 141:Core/Src/stm32f4xx_it.c **** }
 142:Core/Src/stm32f4xx_it.c **** 
 143:Core/Src/stm32f4xx_it.c **** /**
 144:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 145:Core/Src/stm32f4xx_it.c ****   */
 146:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 147:Core/Src/stm32f4xx_it.c **** {
 144              		.loc 1 147 1 view -0
ARM GAS  /tmp/cchyYCbu.s 			page 6


 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 148:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 149:Core/Src/stm32f4xx_it.c **** 
 150:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 151:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 152:Core/Src/stm32f4xx_it.c **** 
 153:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 154:Core/Src/stm32f4xx_it.c **** }
 149              		.loc 1 154 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE138:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB139:
 155:Core/Src/stm32f4xx_it.c **** 
 156:Core/Src/stm32f4xx_it.c **** /**
 157:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 158:Core/Src/stm32f4xx_it.c ****   */
 159:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 160:Core/Src/stm32f4xx_it.c **** {
 163              		.loc 1 160 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 161:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 162:Core/Src/stm32f4xx_it.c **** 
 163:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 164:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 165:Core/Src/stm32f4xx_it.c **** 
 166:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 167:Core/Src/stm32f4xx_it.c **** }
 168              		.loc 1 167 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE139:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB140:
 168:Core/Src/stm32f4xx_it.c **** 
 169:Core/Src/stm32f4xx_it.c **** /**
 170:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 171:Core/Src/stm32f4xx_it.c ****   */
ARM GAS  /tmp/cchyYCbu.s 			page 7


 172:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 173:Core/Src/stm32f4xx_it.c **** {
 182              		.loc 1 173 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 174:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 175:Core/Src/stm32f4xx_it.c **** 
 176:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 177:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 178:Core/Src/stm32f4xx_it.c **** 
 179:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 180:Core/Src/stm32f4xx_it.c **** }
 187              		.loc 1 180 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE140:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB141:
 181:Core/Src/stm32f4xx_it.c **** 
 182:Core/Src/stm32f4xx_it.c **** /**
 183:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 184:Core/Src/stm32f4xx_it.c ****   */
 185:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 186:Core/Src/stm32f4xx_it.c **** {
 201              		.loc 1 186 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI0:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 187:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 188:Core/Src/stm32f4xx_it.c **** 
 189:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 190:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 210              		.loc 1 190 3 view .LVU27
 211 0002 FFF7FEFF 		bl	HAL_IncTick
 212              	.LVL0:
 191:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 192:Core/Src/stm32f4xx_it.c **** 
 193:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 194:Core/Src/stm32f4xx_it.c **** }
 213              		.loc 1 194 1 is_stmt 0 view .LVU28
 214 0006 08BD     		pop	{r3, pc}
 215              		.cfi_endproc
 216              	.LFE141:
 218              		.section	.text.RCC_IRQHandler,"ax",%progbits
ARM GAS  /tmp/cchyYCbu.s 			page 8


 219              		.align	1
 220              		.global	RCC_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	RCC_IRQHandler:
 226              	.LFB142:
 195:Core/Src/stm32f4xx_it.c **** 
 196:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 197:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 198:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 199:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 200:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 201:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 202:Core/Src/stm32f4xx_it.c **** 
 203:Core/Src/stm32f4xx_it.c **** /**
 204:Core/Src/stm32f4xx_it.c ****   * @brief This function handles RCC global interrupt.
 205:Core/Src/stm32f4xx_it.c ****   */
 206:Core/Src/stm32f4xx_it.c **** void RCC_IRQHandler(void)
 207:Core/Src/stm32f4xx_it.c **** {
 227              		.loc 1 207 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 208:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 0 */
 209:Core/Src/stm32f4xx_it.c **** 
 210:Core/Src/stm32f4xx_it.c ****   /* USER CODE END RCC_IRQn 0 */
 211:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 1 */
 212:Core/Src/stm32f4xx_it.c **** 
 213:Core/Src/stm32f4xx_it.c ****   /* USER CODE END RCC_IRQn 1 */
 214:Core/Src/stm32f4xx_it.c **** }
 232              		.loc 1 214 1 view .LVU30
 233 0000 7047     		bx	lr
 234              		.cfi_endproc
 235              	.LFE142:
 237              		.section	.text.USART1_IRQHandler,"ax",%progbits
 238              		.align	1
 239              		.global	USART1_IRQHandler
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 244              	USART1_IRQHandler:
 245              	.LFB143:
 215:Core/Src/stm32f4xx_it.c **** 
 216:Core/Src/stm32f4xx_it.c **** /**
 217:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 218:Core/Src/stm32f4xx_it.c ****   */
 219:Core/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 220:Core/Src/stm32f4xx_it.c **** {
 246              		.loc 1 220 1 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250 0000 08B5     		push	{r3, lr}
 251              	.LCFI1:
 252              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cchyYCbu.s 			page 9


 253              		.cfi_offset 3, -8
 254              		.cfi_offset 14, -4
 221:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 222:Core/Src/stm32f4xx_it.c **** 
 223:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 224:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 255              		.loc 1 224 3 view .LVU32
 256 0002 0248     		ldr	r0, .L19
 257 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 258              	.LVL1:
 225:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 226:Core/Src/stm32f4xx_it.c **** 
 227:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 228:Core/Src/stm32f4xx_it.c **** }
 259              		.loc 1 228 1 is_stmt 0 view .LVU33
 260 0008 08BD     		pop	{r3, pc}
 261              	.L20:
 262 000a 00BF     		.align	2
 263              	.L19:
 264 000c 00000000 		.word	huart1
 265              		.cfi_endproc
 266              	.LFE143:
 268              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 269              		.align	1
 270              		.global	TIM6_DAC_IRQHandler
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 275              	TIM6_DAC_IRQHandler:
 276              	.LFB144:
 229:Core/Src/stm32f4xx_it.c **** 
 230:Core/Src/stm32f4xx_it.c **** 
 231:Core/Src/stm32f4xx_it.c **** /**
 232:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
 233:Core/Src/stm32f4xx_it.c ****   */
 234:Core/Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 235:Core/Src/stm32f4xx_it.c **** {
 277              		.loc 1 235 1 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 08B5     		push	{r3, lr}
 282              	.LCFI2:
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 3, -8
 285              		.cfi_offset 14, -4
 236:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 237:Core/Src/stm32f4xx_it.c **** 
 238:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 239:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 286              		.loc 1 239 3 view .LVU35
 287 0002 0248     		ldr	r0, .L23
 288 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 289              	.LVL2:
 240:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 241:Core/Src/stm32f4xx_it.c **** 
 242:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
ARM GAS  /tmp/cchyYCbu.s 			page 10


 243:Core/Src/stm32f4xx_it.c **** }
 290              		.loc 1 243 1 is_stmt 0 view .LVU36
 291 0008 08BD     		pop	{r3, pc}
 292              	.L24:
 293 000a 00BF     		.align	2
 294              	.L23:
 295 000c 00000000 		.word	htim6
 296              		.cfi_endproc
 297              	.LFE144:
 299              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 300              		.align	2
 301              	.LC0:
 302 0000 54494D36 		.ascii	"TIM6 expires: %ld\012\000"
 302      20657870 
 302      69726573 
 302      3A20256C 
 302      640A00
 303              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 304              		.align	1
 305              		.global	HAL_TIM_PeriodElapsedCallback
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 310              	HAL_TIM_PeriodElapsedCallback:
 311              	.LVL3:
 312              	.LFB145:
 244:Core/Src/stm32f4xx_it.c **** 
 245:Core/Src/stm32f4xx_it.c **** /**
 246:Core/Src/stm32f4xx_it.c ****   * @brief  Period elapsed callback in non blocking mode
 247:Core/Src/stm32f4xx_it.c ****   * @param  htim : TIM handle
 248:Core/Src/stm32f4xx_it.c ****   * @retval None
 249:Core/Src/stm32f4xx_it.c ****   */
 250:Core/Src/stm32f4xx_it.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 251:Core/Src/stm32f4xx_it.c **** {
 313              		.loc 1 251 1 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		.loc 1 251 1 is_stmt 0 view .LVU38
 318 0000 08B5     		push	{r3, lr}
 319              	.LCFI3:
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 3, -8
 322              		.cfi_offset 14, -4
 252:Core/Src/stm32f4xx_it.c ****   if (htim->Instance == TIM6)
 323              		.loc 1 252 3 is_stmt 1 view .LVU39
 324              		.loc 1 252 11 is_stmt 0 view .LVU40
 325 0002 0268     		ldr	r2, [r0]
 326              		.loc 1 252 6 view .LVU41
 327 0004 054B     		ldr	r3, .L29
 328 0006 9A42     		cmp	r2, r3
 329 0008 00D0     		beq	.L28
 330              	.LVL4:
 331              	.L25:
 253:Core/Src/stm32f4xx_it.c ****     printf("TIM6 expires: %ld\n", HAL_GetTick());
 254:Core/Src/stm32f4xx_it.c **** }
 332              		.loc 1 254 1 view .LVU42
ARM GAS  /tmp/cchyYCbu.s 			page 11


 333 000a 08BD     		pop	{r3, pc}
 334              	.LVL5:
 335              	.L28:
 253:Core/Src/stm32f4xx_it.c ****     printf("TIM6 expires: %ld\n", HAL_GetTick());
 336              		.loc 1 253 5 is_stmt 1 view .LVU43
 337 000c FFF7FEFF 		bl	HAL_GetTick
 338              	.LVL6:
 253:Core/Src/stm32f4xx_it.c ****     printf("TIM6 expires: %ld\n", HAL_GetTick());
 339              		.loc 1 253 5 is_stmt 0 view .LVU44
 340 0010 0146     		mov	r1, r0
 341 0012 0348     		ldr	r0, .L29+4
 342 0014 FFF7FEFF 		bl	printf
 343              	.LVL7:
 344              		.loc 1 254 1 view .LVU45
 345 0018 F7E7     		b	.L25
 346              	.L30:
 347 001a 00BF     		.align	2
 348              	.L29:
 349 001c 00100040 		.word	1073745920
 350 0020 00000000 		.word	.LC0
 351              		.cfi_endproc
 352              	.LFE145:
 354              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 355              		.align	1
 356              		.global	EXTI9_5_IRQHandler
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 361              	EXTI9_5_IRQHandler:
 362              	.LFB146:
 255:Core/Src/stm32f4xx_it.c **** 
 256:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 1 */
 257:Core/Src/stm32f4xx_it.c **** 
 258:Core/Src/stm32f4xx_it.c **** void EXTI9_5_IRQHandler(void)
 259:Core/Src/stm32f4xx_it.c **** {
 363              		.loc 1 259 1 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367 0000 08B5     		push	{r3, lr}
 368              	.LCFI4:
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 3, -8
 371              		.cfi_offset 14, -4
 260:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_8);
 372              		.loc 1 260 3 view .LVU47
 373 0002 4FF48070 		mov	r0, #256
 374 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 375              	.LVL8:
 261:Core/Src/stm32f4xx_it.c **** }
 376              		.loc 1 261 1 is_stmt 0 view .LVU48
 377 000a 08BD     		pop	{r3, pc}
 378              		.cfi_endproc
 379              	.LFE146:
 381              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 382              		.align	1
 383              		.global	EXTI15_10_IRQHandler
ARM GAS  /tmp/cchyYCbu.s 			page 12


 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 388              	EXTI15_10_IRQHandler:
 389              	.LFB147:
 262:Core/Src/stm32f4xx_it.c **** 
 263:Core/Src/stm32f4xx_it.c **** void EXTI15_10_IRQHandler(void)
 264:Core/Src/stm32f4xx_it.c **** {
 390              		.loc 1 264 1 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394 0000 08B5     		push	{r3, lr}
 395              	.LCFI5:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 3, -8
 398              		.cfi_offset 14, -4
 265:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_11);
 399              		.loc 1 265 3 view .LVU50
 400 0002 4FF40060 		mov	r0, #2048
 401 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 402              	.LVL9:
 266:Core/Src/stm32f4xx_it.c **** }
 403              		.loc 1 266 1 is_stmt 0 view .LVU51
 404 000a 08BD     		pop	{r3, pc}
 405              		.cfi_endproc
 406              	.LFE147:
 408              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 409              		.align	2
 410              	.LC1:
 411 0000 4B455931 		.ascii	"KEY1 PRESSAED! %ld\012\000"
 411      20505245 
 411      53534145 
 411      44212025 
 411      6C640A00 
 412              		.align	2
 413              	.LC2:
 414 0014 4B455932 		.ascii	"KEY2 PRESSAED! %ld\012\000"
 414      20505245 
 414      53534145 
 414      44212025 
 414      6C640A00 
 415              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 416              		.align	1
 417              		.global	HAL_GPIO_EXTI_Callback
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 422              	HAL_GPIO_EXTI_Callback:
 423              	.LVL10:
 424              	.LFB148:
 267:Core/Src/stm32f4xx_it.c **** 
 268:Core/Src/stm32f4xx_it.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 269:Core/Src/stm32f4xx_it.c **** {
 425              		.loc 1 269 1 is_stmt 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cchyYCbu.s 			page 13


 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		.loc 1 269 1 is_stmt 0 view .LVU53
 430 0000 10B5     		push	{r4, lr}
 431              	.LCFI6:
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 4, -8
 434              		.cfi_offset 14, -4
 270:Core/Src/stm32f4xx_it.c ****     int i;
 435              		.loc 1 270 5 is_stmt 1 view .LVU54
 271:Core/Src/stm32f4xx_it.c **** 
 272:Core/Src/stm32f4xx_it.c ****     switch(GPIO_Pin)
 436              		.loc 1 272 5 view .LVU55
 437 0002 B0F5807F 		cmp	r0, #256
 438 0006 03D0     		beq	.L36
 439 0008 B0F5006F 		cmp	r0, #2048
 440 000c 10D0     		beq	.L37
 441              	.LVL11:
 442              	.L35:
 273:Core/Src/stm32f4xx_it.c ****     {
 274:Core/Src/stm32f4xx_it.c ****         case GPIO_PIN_8:
 275:Core/Src/stm32f4xx_it.c ****           printf("KEY1 PRESSAED! %ld\n", HAL_GetTick());
 276:Core/Src/stm32f4xx_it.c ****           // i_flash = 5;
 277:Core/Src/stm32f4xx_it.c ****           // for (i = 0; i < 5; i++)
 278:Core/Src/stm32f4xx_it.c ****           // {
 279:Core/Src/stm32f4xx_it.c ****           //     HAL_GPIO_WritePin(GPIOF, GPIO_PIN_7, GPIO_PIN_SET); 
 280:Core/Src/stm32f4xx_it.c ****           //     HAL_Delay(100);                      
 281:Core/Src/stm32f4xx_it.c ****           //     HAL_GPIO_WritePin(GPIOF, GPIO_PIN_7, GPIO_PIN_RESET);
 282:Core/Src/stm32f4xx_it.c ****           //     HAL_Delay(100);
 283:Core/Src/stm32f4xx_it.c ****           // }
 284:Core/Src/stm32f4xx_it.c ****           HAL_GPIO_WritePin(GPIOF, GPIO_PIN_7, GPIO_PIN_SET);
 285:Core/Src/stm32f4xx_it.c ****           HAL_Delay(5000); 
 286:Core/Src/stm32f4xx_it.c ****           break;
 287:Core/Src/stm32f4xx_it.c ****         case GPIO_PIN_11:
 288:Core/Src/stm32f4xx_it.c ****           printf("KEY2 PRESSAED! %ld\n", HAL_GetTick());
 289:Core/Src/stm32f4xx_it.c ****           // HAL_GPIO_WritePin(GPIOF, GPIO_PIN_0, GPIO_PIN_SET); 
 290:Core/Src/stm32f4xx_it.c ****           // HAL_GPIO_WritePin(GPIOF, GPIO_PIN_1, GPIO_PIN_SET); 
 291:Core/Src/stm32f4xx_it.c ****           // HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, GPIO_PIN_SET); 
 292:Core/Src/stm32f4xx_it.c ****           // HAL_GPIO_WritePin(GPIOF, GPIO_PIN_3, GPIO_PIN_SET); 
 293:Core/Src/stm32f4xx_it.c ****           // HAL_GPIO_WritePin(GPIOF, GPIO_PIN_4, GPIO_PIN_SET); 
 294:Core/Src/stm32f4xx_it.c ****           // HAL_GPIO_WritePin(GPIOF, GPIO_PIN_5, GPIO_PIN_SET); 
 295:Core/Src/stm32f4xx_it.c ****           // HAL_GPIO_WritePin(GPIOF, GPIO_PIN_6, GPIO_PIN_SET); 
 296:Core/Src/stm32f4xx_it.c ****           // HAL_GPIO_WritePin(GPIOF, GPIO_PIN_7, GPIO_PIN_SET); 
 297:Core/Src/stm32f4xx_it.c ****           // HAL_Delay(500);
 298:Core/Src/stm32f4xx_it.c ****           HAL_GPIO_WritePin(GPIOF, GPIO_PIN_7, GPIO_PIN_RESET);
 299:Core/Src/stm32f4xx_it.c ****           HAL_GPIO_WritePin(GPIOF, GPIO_PIN_6, GPIO_PIN_SET);
 300:Core/Src/stm32f4xx_it.c ****           HAL_Delay(5000); 
 301:Core/Src/stm32f4xx_it.c ****           HAL_GPIO_WritePin(GPIOF, GPIO_PIN_6, GPIO_PIN_RESET);
 302:Core/Src/stm32f4xx_it.c ****           break;
 303:Core/Src/stm32f4xx_it.c ****     }
 304:Core/Src/stm32f4xx_it.c **** }
 443              		.loc 1 304 1 is_stmt 0 view .LVU56
 444 000e 10BD     		pop	{r4, pc}
 445              	.LVL12:
 446              	.L36:
 275:Core/Src/stm32f4xx_it.c ****           // i_flash = 5;
 447              		.loc 1 275 11 is_stmt 1 view .LVU57
 448 0010 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cchyYCbu.s 			page 14


 449              	.LVL13:
 275:Core/Src/stm32f4xx_it.c ****           // i_flash = 5;
 450              		.loc 1 275 11 is_stmt 0 view .LVU58
 451 0014 0146     		mov	r1, r0
 452 0016 1448     		ldr	r0, .L40
 453 0018 FFF7FEFF 		bl	printf
 454              	.LVL14:
 284:Core/Src/stm32f4xx_it.c ****           HAL_Delay(5000); 
 455              		.loc 1 284 11 is_stmt 1 view .LVU59
 456 001c 0122     		movs	r2, #1
 457 001e 8021     		movs	r1, #128
 458 0020 1248     		ldr	r0, .L40+4
 459 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 460              	.LVL15:
 285:Core/Src/stm32f4xx_it.c ****           break;
 461              		.loc 1 285 11 view .LVU60
 462 0026 41F28830 		movw	r0, #5000
 463 002a FFF7FEFF 		bl	HAL_Delay
 464              	.LVL16:
 286:Core/Src/stm32f4xx_it.c ****         case GPIO_PIN_11:
 465              		.loc 1 286 11 view .LVU61
 466 002e EEE7     		b	.L35
 467              	.LVL17:
 468              	.L37:
 288:Core/Src/stm32f4xx_it.c ****           // HAL_GPIO_WritePin(GPIOF, GPIO_PIN_0, GPIO_PIN_SET); 
 469              		.loc 1 288 11 view .LVU62
 470 0030 FFF7FEFF 		bl	HAL_GetTick
 471              	.LVL18:
 288:Core/Src/stm32f4xx_it.c ****           // HAL_GPIO_WritePin(GPIOF, GPIO_PIN_0, GPIO_PIN_SET); 
 472              		.loc 1 288 11 is_stmt 0 view .LVU63
 473 0034 0146     		mov	r1, r0
 474 0036 0E48     		ldr	r0, .L40+8
 475 0038 FFF7FEFF 		bl	printf
 476              	.LVL19:
 298:Core/Src/stm32f4xx_it.c ****           HAL_GPIO_WritePin(GPIOF, GPIO_PIN_6, GPIO_PIN_SET);
 477              		.loc 1 298 11 is_stmt 1 view .LVU64
 478 003c 0B4C     		ldr	r4, .L40+4
 479 003e 0022     		movs	r2, #0
 480 0040 8021     		movs	r1, #128
 481 0042 2046     		mov	r0, r4
 482 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 483              	.LVL20:
 299:Core/Src/stm32f4xx_it.c ****           HAL_Delay(5000); 
 484              		.loc 1 299 11 view .LVU65
 485 0048 0122     		movs	r2, #1
 486 004a 4021     		movs	r1, #64
 487 004c 2046     		mov	r0, r4
 488 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 489              	.LVL21:
 300:Core/Src/stm32f4xx_it.c ****           HAL_GPIO_WritePin(GPIOF, GPIO_PIN_6, GPIO_PIN_RESET);
 490              		.loc 1 300 11 view .LVU66
 491 0052 41F28830 		movw	r0, #5000
 492 0056 FFF7FEFF 		bl	HAL_Delay
 493              	.LVL22:
 301:Core/Src/stm32f4xx_it.c ****           break;
 494              		.loc 1 301 11 view .LVU67
 495 005a 0022     		movs	r2, #0
ARM GAS  /tmp/cchyYCbu.s 			page 15


 496 005c 4021     		movs	r1, #64
 497 005e 2046     		mov	r0, r4
 498 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 499              	.LVL23:
 302:Core/Src/stm32f4xx_it.c ****     }
 500              		.loc 1 302 11 view .LVU68
 501              		.loc 1 304 1 is_stmt 0 view .LVU69
 502 0064 D3E7     		b	.L35
 503              	.L41:
 504 0066 00BF     		.align	2
 505              	.L40:
 506 0068 00000000 		.word	.LC1
 507 006c 00140240 		.word	1073878016
 508 0070 14000000 		.word	.LC2
 509              		.cfi_endproc
 510              	.LFE148:
 512              		.text
 513              	.Letext0:
 514              		.file 2 "/usr/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machine/_defa
 515              		.file 3 "/usr/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 516              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 517              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 518              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 519              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 520              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 521              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 522              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 523              		.file 11 "/usr/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/stdio.h"
ARM GAS  /tmp/cchyYCbu.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/cchyYCbu.s:21     .text.NMI_Handler:0000000000000000 $t
     /tmp/cchyYCbu.s:27     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cchyYCbu.s:44     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cchyYCbu.s:50     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cchyYCbu.s:67     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cchyYCbu.s:73     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cchyYCbu.s:90     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cchyYCbu.s:96     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cchyYCbu.s:113    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cchyYCbu.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cchyYCbu.s:136    .text.SVC_Handler:0000000000000000 $t
     /tmp/cchyYCbu.s:142    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cchyYCbu.s:155    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cchyYCbu.s:161    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cchyYCbu.s:174    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cchyYCbu.s:180    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cchyYCbu.s:193    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cchyYCbu.s:199    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cchyYCbu.s:219    .text.RCC_IRQHandler:0000000000000000 $t
     /tmp/cchyYCbu.s:225    .text.RCC_IRQHandler:0000000000000000 RCC_IRQHandler
     /tmp/cchyYCbu.s:238    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/cchyYCbu.s:244    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/cchyYCbu.s:264    .text.USART1_IRQHandler:000000000000000c $d
     /tmp/cchyYCbu.s:269    .text.TIM6_DAC_IRQHandler:0000000000000000 $t
     /tmp/cchyYCbu.s:275    .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
     /tmp/cchyYCbu.s:295    .text.TIM6_DAC_IRQHandler:000000000000000c $d
     /tmp/cchyYCbu.s:300    .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:0000000000000000 $d
     /tmp/cchyYCbu.s:304    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cchyYCbu.s:310    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cchyYCbu.s:349    .text.HAL_TIM_PeriodElapsedCallback:000000000000001c $d
     /tmp/cchyYCbu.s:355    .text.EXTI9_5_IRQHandler:0000000000000000 $t
     /tmp/cchyYCbu.s:361    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
     /tmp/cchyYCbu.s:382    .text.EXTI15_10_IRQHandler:0000000000000000 $t
     /tmp/cchyYCbu.s:388    .text.EXTI15_10_IRQHandler:0000000000000000 EXTI15_10_IRQHandler
     /tmp/cchyYCbu.s:409    .rodata.HAL_GPIO_EXTI_Callback.str1.4:0000000000000000 $d
     /tmp/cchyYCbu.s:416    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/cchyYCbu.s:422    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/cchyYCbu.s:506    .text.HAL_GPIO_EXTI_Callback:0000000000000068 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_UART_IRQHandler
huart1
HAL_TIM_IRQHandler
htim6
HAL_GetTick
printf
HAL_GPIO_EXTI_IRQHandler
HAL_GPIO_WritePin
HAL_Delay
